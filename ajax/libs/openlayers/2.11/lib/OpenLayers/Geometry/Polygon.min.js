OpenLayers.Geometry.Polygon=OpenLayers.Class(OpenLayers.Geometry.Collection,{componentTypes:["OpenLayers.Geometry.LinearRing"],initialize:function(){OpenLayers.Geometry.Collection.prototype.initialize.apply(this,arguments)},getArea:function(){var e=0;if(this.components&&this.components.length>0){e+=Math.abs(this.components[0].getArea());for(var t=1,i=this.components.length;i>t;t++)e-=Math.abs(this.components[t].getArea())}return e},getGeodesicArea:function(e){var t=0;if(this.components&&this.components.length>0){t+=Math.abs(this.components[0].getGeodesicArea(e));for(var i=1,n=this.components.length;n>i;i++)t-=Math.abs(this.components[i].getGeodesicArea(e))}return t},containsPoint:function(e){var t=this.components.length,i=!1;if(t>0&&(i=this.components[0].containsPoint(e),1!==i&&i&&t>1))for(var n,r=1;t>r;++r)if(n=this.components[r].containsPoint(e)){i=1===n?1:!1;break}return i},intersects:function(e){var t,i,n=!1;if("OpenLayers.Geometry.Point"==e.CLASS_NAME)n=this.containsPoint(e);else if("OpenLayers.Geometry.LineString"==e.CLASS_NAME||"OpenLayers.Geometry.LinearRing"==e.CLASS_NAME){for(t=0,i=this.components.length;i>t&&!(n=e.intersects(this.components[t]));++t);if(!n)for(t=0,i=e.components.length;i>t&&!(n=this.containsPoint(e.components[t]));++t);}else for(t=0,i=e.components.length;i>t&&!(n=this.intersects(e.components[t]));++t);if(!n&&"OpenLayers.Geometry.Polygon"==e.CLASS_NAME){var r=this.components[0];for(t=0,i=r.components.length;i>t&&!(n=e.containsPoint(r.components[t]));++t);}return n},distanceTo:function(e,t){var i,n=!(t&&t.edge===!1);return i=!n&&this.intersects(e)?0:OpenLayers.Geometry.Collection.prototype.distanceTo.apply(this,[e,t])},CLASS_NAME:"OpenLayers.Geometry.Polygon"}),OpenLayers.Geometry.Polygon.createRegularPolygon=function(e,t,i,n){var r=Math.PI*(1/i-.5);n&&(r+=n/180*Math.PI);for(var o,s,a,l=[],c=0;i>c;++c)o=r+2*c*Math.PI/i,s=e.x+t*Math.cos(o),a=e.y+t*Math.sin(o),l.push(new OpenLayers.Geometry.Point(s,a));var u=new OpenLayers.Geometry.LinearRing(l);return new OpenLayers.Geometry.Polygon([u])};